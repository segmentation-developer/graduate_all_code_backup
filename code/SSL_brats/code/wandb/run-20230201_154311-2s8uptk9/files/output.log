
Namespace(T=8, base_lr=0.01, batch_size=4, consistency=1, consistency_rampup=40.0, consistency_type='mse', deterministic=1, ema_decay=0.99, exp='Consis1.0_MT_UA2avg_2task_SDM_dualD', gpu='4', labeled_bs=2, labeled_num=25, max_iterations=30000, model='uncertaintyConfirm_vnet_3D_96', num_classes=2, patch_size=[96, 96, 96], root_path='/data/sohui/BraTS/data/BraTs2019', seed=1337, total_labeled_num=250)
  0%|                                        | 0/2501 [00:00<?, ?it/s]
total 250 samples
















  1%|▏                           | 16/2501 [08:31<22:06:49, 32.04s/it]
Validation begin
  1%|▏                           | 16/2501 [08:56<23:08:23, 33.52s/it]                                                                                                                                                                                                                   | 0/25 [00:00<?, ?it/s]
Traceback (most recent call last):
  File "Brats2_MT_UA2avg_2task_SDM_2Dec_ConfirmUncertainty.py", line 338, in <module>
    train(args, snapshot_path)
  File "Brats2_MT_UA2avg_2task_SDM_2Dec_ConfirmUncertainty.py", line 272, in train
    avg_metric,uncertainty_val = test_all_case(
  File "/home/sohui/code/SSL_brats/code/brats_val_3D_2task_ConfirmUncertainty.py", line 103, in test_all_case
    uncertainty_val = torch.mean(-1.0 * torch.sum(prediction * torch.log(prediction + 1e-6), dim=1))
TypeError: log(): argument 'input' (position 1) must be Tensor, not numpy.ndarray