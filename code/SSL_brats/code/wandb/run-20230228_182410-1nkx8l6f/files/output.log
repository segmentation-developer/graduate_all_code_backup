
Namespace(T=1, base_lr=0.01, batch_size=4, consistency=0.1, consistency_rampup=40.0, consistency_type='mse', deterministic=1, ema_decay=0.99, exp='GDT-MT_woATO', gpu='1', labeled_bs=2, labeled_num=25, max_iterations=30000, model='vnet_3D_96_32', num_classes=2, patch_size=[96, 96, 96], root_path='/data/sohui/BraTS/data/BraTs2019', seed=1337, total_labeled_num=250)
  0%|                                        | 0/2501 [00:00<?, ?it/s]
total 250 samples
  0%|                                        | 0/2501 [00:02<?, ?it/s]
Traceback (most recent call last):
  File "Brats2_GDT-MT_woATO.py", line 310, in <module>
    train(args, snapshot_path)
  File "Brats2_GDT-MT_woATO.py", line 180, in train
    preds, SDM_avg = ema_model(ema_inputs)  ## unlabel의 shape를 *2로 복사한 값에 새로운 noise를 >계속 넣어줘서 teacher model에 계속 실험  -> preds에 계속 결과 쌓기
  File "/home/sohui/miniconda3/envs/test/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/sohui/code/SSL_brats/code/networks/vnet_2task_SDM_2Dec.py", line 326, in forward
    features = self.encoder(input)
  File "/home/sohui/miniconda3/envs/test/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/sohui/code/SSL_brats/code/networks/vnet_2task_SDM_2Dec.py", line 169, in forward
    x1 = self.block_one(input)
  File "/home/sohui/miniconda3/envs/test/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/sohui/code/SSL_brats/code/networks/vnet_2task_SDM_2Dec.py", line 30, in forward
    x = self.conv(x)
  File "/home/sohui/miniconda3/envs/test/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/sohui/miniconda3/envs/test/lib/python3.8/site-packages/torch/nn/modules/container.py", line 119, in forward
    input = module(input)
  File "/home/sohui/miniconda3/envs/test/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/sohui/miniconda3/envs/test/lib/python3.8/site-packages/torch/nn/modules/conv.py", line 520, in forward
    return F.conv3d(input, self.weight, self.bias, self.stride,
RuntimeError: CUDA out of memory. Tried to allocate 108.00 MiB (GPU 0; 11.91 GiB total capacity; 4.66 GiB already allocated; 65.94 MiB free; 4.72 GiB reserved in total by PyTorch)